name: build-simple-app
on:
  push:
    branches:
      - 'main'
    paths:
      - 'simple-app/**'
env:
  CSP_API_URL: https://console.cloud.vmware.com
  CSP_API_TOKEN: ${{ secrets.CSP_API_TOKEN }}
  VIB_PUBLIC_URL: https://cp.bromelia.vmware.com
jobs:
  pack-verify-and-publish-package:
    name: Pack, verify and publish the package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: vmware-labs/vmware-image-builder-action@main
        with:
          pipeline: simple-app.json
        env:
          TARGET_PLATFORM: 91d398a2-25c4-4cda-8732-75a3cfc179a1
          VIB_ENV_REGISTRY_USERNAME: ${{ github.repository_owner }}
          VIB_ENV_REGISTRY_PASSWORD: ${{ secrets.PAT }}
  update-repository:
    name: Update repository
    needs: pack-verify-and-publish-package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Carvel setup
        uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: ytt, kbld, imgpkg
      - name: Extract version
        run: |
          NEW_VERSION=$(cat simple-app/package.yaml | yq '.spec.version')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      - name: Copy Package CR to repository
        run: |
          cp simple-app/package.yaml repository/packages/simple-app.corp.com/${{ env.NEW_VERSION }}.yml
      - name: Record which package bundles are used
        run: |
          mkdir -p repository/.imgpkg
          kbld -f repository/packages/ --imgpkg-lock-output repository/.imgpkg/images.yml
      - name: Commit reporitory changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'simple-app ${{ env.NEW_VERSION }} - ${{ github.event.head_commit.message }}'
          add: 'repository/'
      - name: Export repository name
        run: |
          echo "REPOSITORY=ghcr.io/${{ github.repository_owner }}/carvel-repository-example-repository:${{ env.NEW_VERSION }}" >> $GITHUB_ENV
      - name: Push bundle
        run: |
          imgpkg push -b ${{ env.REPOSITORY }} -f repository/ --registry-username ${{ github.repository_owner }} --registry-password ${{ secrets.PAT }}
      - name: Create PackageRepository CR
        run: |
          ytt -f repository/repository-template.yml -v bundle="${{ env.REPOSITORY }}" > repository/repository.yaml
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./repository/repository.yaml
          asset_name: package_repository_cr.yml
          asset_content_type: text/yaml

